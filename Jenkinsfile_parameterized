#!groovy

properties([
        [
                $class: 'GithubProjectProperty',
                displayName: 'Evidence Management CCD Orchestrator',
                projectUrlStr: 'https://github.com/hmcts/rap-em-ccd-orchestrator'
        ],
        pipelineTriggers([
                [$class: 'GitHubPushTrigger']
        ]),
        parameters([
                choice(name: 'ENVIRONMENT', choices: 'saat\nsprod\nsandbox', description: 'Environment where code should be build and deployed')
        ]),
])

@Library("Infrastructure")

def type = "java"
def product = "em"
def component = "ccd-orchestrator"
def secrets = [
        's2s-${env}': [
                secret('microservicekey-em-gw', 'FUNCTIONAL_TEST_CLIENT_S2S_TOKEN')
        ],
        'rpa-${env}': [
                secret('show-oauth2-token', 'FUNCTIONAL_TEST_CLIENT_OAUTH_SECRET')
        ]]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

def vaultOverrides = [
        'preview' : 'aat',
        'spreview': 'saat'
]

withParameterizedPipeline(type, product, component, params.ENVIRONMENT, 'sandbox') {
    enableDockerBuild()
    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)
}
