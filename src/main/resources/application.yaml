spring:
  application:
    name: EM CCD Orchestrator
  config:
    import: "optional:configtree:/mnt/secrets/em-ccdorc/"
  batch:
    job:
      enabled: false
      jobCronExpression: ${JOB_CRON_EXPRESSION:"* * * * * *"}
    initialize-schema: never
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: ${OPEN_ID_API_BASE_URI:https://idam-web-public.aat.platform.hmcts.net/o}
        registration:
          oidc:
            client-id: microservicekey-em-ccd-orchestrator
            client-secret: ${S2S_KEY:AAAAAAAAAAAAAAAA}

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: '/'
      exposure:
        include:
         - health
         - info
  health:
    db:
      enabled: false
    diskspace:
      enabled: false
  info:
     build:
       enabled: true # Whether to enable build info.
     defaults:
       enabled: true # Whether to enable default info contributors.
     env:
       enabled: true # Whether to enable environment info.
     git:
       enabled: true # Whether to enable git info.
       mode: simple # Mode to use to expose git information.

info:
  app:
    environment: ${PACKAGES_ENVIRONMENT:local}
    project: ${PACKAGES_PROJECT:em-ccd-orchestrator}
    name: ${PACKAGES_NAME:cor}
#    version: ${PACKAGES_VERSION:unknown}

auth:
  idam:
    client:
      baseUrl: ${IDAM_API_BASE_URI:https://idam-api.aat.platform.hmcts.net}
  provider:
    service:
      client:
        baseUrl: ${S2S_BASE_URI:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}

azure:
  app_insights_key: ${APPINSIGHTS_INSTRUMENTATIONKEY:true}
  application-insights:
    instrumentation-key: ${APPINSIGHTS_INSTRUMENTATIONKEY:d30268e8-8979-4579-8d58-010dbe03a1e6}

app-insights:
  dev-mode: off
  request-component: on
  telemetry-component: on

em-rpa-ccd-orchestrator:
  base-url: ${EM_CCD_ORCHESTRATOR_URL:http://localhost:8080}

dm-store-app:
  base-url: ${DM_STORE_APP_URL:http://dm-store-aat.service.core-compute-aat.internal}

em-rpa-stitching-api:
  base-url: ${EM_STITCHING_API_URL:http://localhost:4630}
  resource: '/api/document-tasks/'

idam:
  s2s-auth:
    url: ${S2S_BASE_URI:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}
    totp_secret: ${S2S_KEY:AAAAAAAAAAAAAAAA}
    microservice: em_ccd_orchestrator
  s2s-authorised:
    services: ${S2S_NAMES_WHITELIST:sscs,divorce,ccd,em_gw,ccd_data,iac,em_stitching_api,ia,xui_webapp,civil_service,prl_cos_api}

callbackUrlCreator:
  scheme: ${CALLBACK_HTTP_SCHEME:http}
  host: ${CALLBACK_DOMAIN:localhost} # SERVER_NAME is the domain injected by the Azure
  port: ${CALLBACK_HTTP_HOST_PORT:8080}

core_case_data:
  api:
    url: ${CCD_DATA_API_URL:http://localhost:4452}

endpoint-toggles:
  stitching-complete-callback: ${ENABLE_STITCHING_COMPLETE_CALLBACK:true}

notify:
  apiKey: ${NOTIFICATION_API_KEY:test_key-86d79f79-5045-4df2-87d1-6b7d87b41f6b-a703ea6c-9869-42a7-aaa8-38c98a0cc044}
  successTemplateId: 58f6384c-64f9-4ddc-a409-259fe04d1836
  failureTemplateId: 2f133f4e-5adc-418c-9554-b18968db253e

httpclient:
  call-timeout: ${HTTPCLIENT_CALL_TIMEOUT:30}

springdoc:
  packagesToScan: uk.gov.hmcts.reform.em.orchestrator.endpoint
  pathsToMatch: /**

logging:
  level:
    uk.gov.hmcts.reform.authorisation.filters: DEBUG