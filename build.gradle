buildscript {
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.83")
        classpath("net.serenity-bdd:serenity-single-page-report:2.1.4")
    }
}

plugins {
    id 'application'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'org.owasp.dependencycheck' version '5.3.1'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id 'org.sonarqube' version '2.8'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id 'io.franzbecker.gradle-lombok' version '3.3.0'
    id 'au.com.dius.pact' version '4.0.4'
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'


if (!project.hasProperty('runList')) {
    project.ext.runList = 'main'
}

group 'uk.gov.hmcts.reform.em.orchestrator'
version '0.0.1'
sourceCompatibility = 11
mainClassName = 'uk.gov.hmcts.reform.em.orchestrator.Application'

configurations {
    aatCompile.extendsFrom(testCompile)
    aatRuntime.extendsFrom(testRuntime)
}

repositories {
    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    jcenter()
    mavenLocal()
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

def versions = [
        serenity           : '2.0.23',
        serenityreporter   : '2.1.4',
        pact_version       : '3.5.24',
        logging            : '5.1.5'
]
sourceSets {
    aat {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir('src/aat/java')
        }
        resources {
            srcDir('src/aat/resources')
        }
    }
    test {
        java.srcDir 'src/test/java'
    }
    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contactTest/resources')
    }
}

configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            if (details.requested.group in ['org.apache.tomcat.embed']) {
                details.useVersion '9.0.36'
            }
        }
    }
}

dependencies {
    aatCompileOnly 'org.projectlombok:lombok:1.18.12'
    aatAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
    compile "com.squareup.okhttp3:okhttp:4.4.1"
    compile group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '4.4.1'
    compile group: "commons-io", name: "commons-io", version: "2.6"
    compile "org.springframework.boot:spring-boot-starter-batch"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-json-org:2.10.3"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hppc:2.10.3"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.2"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.10.3"
    compile "com.fasterxml.jackson.core:jackson-core:2.10.3"
    compile "com.fasterxml.jackson.core:jackson-annotations:2.10.3"
    compile "com.fasterxml.jackson.core:jackson-databind:2.10.3"
    compile "com.fasterxml.jackson.module:jackson-module-afterburner:2.10.3"
    compile "pl.touk:throwing-function:1.3"
    compile "com.jayway.jsonpath:json-path:2.4.0"
    compile "org.zalando:problem-spring-web:0.25.2"
    compile "io.springfox:springfox-swagger2:2.9.2"
    compile "io.springfox:springfox-swagger-ui:2.9.2"
    compile group: "org.apache.commons", name: "commons-lang3", version: "3.9"
    compile group: "commons-validator", name: "commons-validator", version: "1.6"
    compile group: "uk.gov.hmcts.reform.auth", name: "auth-checker-lib", version: "2.1.4"
    compile group: "uk.gov.hmcts.reform", name: "service-auth-provider-client", version: "3.1.1"
    compile group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.logging
    compile group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.logging
    compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.logging
    compile group: "uk.gov.hmcts.reform", name: "health-spring-boot-starter", version: "0.0.5"
    compile group: "uk.gov.hmcts.reform", name: "properties-volume-spring-boot-starter", version:"0.0.4"
    compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '3.1.1'

    compile "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    compile "org.springframework.boot:spring-boot-starter-oauth2-client"
    compile "io.github.openfeign:feign-httpclient:10.7.0"

    compile group: 'uk.gov.service.notify', name: 'notifications-java-client', version: '3.15.1-RELEASE'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
    annotationProcessor ("org.springframework.boot:spring-boot-configuration-processor") {
        exclude group: "com.vaadin.external.google", module: "android-json"
    }

    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "com.vaadin.external.google", module: "android-json"
    }
    testCompile group: "junit", name: "junit", version: "4.13"
    testCompile "com.github.gmazzo:okhttp-mock:1.3.2"
    testCompile "com.github.gmazzo:okhttp-mock:1.3.1"
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.3.1'

    testCompile (group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity) {
        exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
    }
    testCompile (group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity) {
        exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
    }
    testCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenityreporter


    testCompile "org.junit.jupiter:junit-jupiter-api:5.3.2"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.3.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.2"

    aatCompile group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    aatCompile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'

    //pact contract testing
    contractTestCompile group: 'au.com.dius', name: 'pact-jvm-consumer-junit5_2.12', version: versions.pact_version
    contractTestCompile group: 'au.com.dius', name: 'pact-jvm-consumer-java8_2.12', version: versions.pact_version

    contractTestCompile("org.junit.jupiter:junit-jupiter-api:5.3.2")
    contractTestRuntime("org.junit.jupiter:junit-jupiter-engine:5.3.2")
    contractTestImplementation('org.junit.jupiter:junit-jupiter-api:5.3.2')

    contractTestCompile sourceSets.main.runtimeClasspath
    contractTestCompile sourceSets.test.runtimeClasspath

    aatCompile ("uk.gov.hmcts.reform:em-test-helper:1.17.5") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-test'
    }
}

checkstyle {
    maxWarnings = 10
    toolVersion = '8.12'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
    toolVersion = "6.11.0"
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

checkstyleMain.shouldRunAfter(compileJava)
test.shouldRunAfter(checkstyleTest)

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'false' ? 11 : 0
    suppressionFile = 'config/owasp/dependency-check-suppressions.xml'
    analyzers {
        // Disable scanning of .NET related binaries
        assemblyEnabled = false
    }
}

bootJar {
    baseName 'rpa-em-ccd-orchestrator'
    archiveName = "$baseName"+".jar"
    destinationDir = file("$rootDir/build/libs")
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

def coverageExclusionList = [
        '**uk/gov/hmcts/reform/em/orchestrator/Application*',
        '**uk/gov/hmcts/reform/em/orchestrator/CliApplication*',
        '**uk/gov/hmcts/reform/em/orchestrator/appinsights/*',
        '**uk/gov/hmcts/reform/em/orchestrator/config/*',
        '**uk/gov/hmcts/reform/em/orchestrator/config/logging/*',
        '**uk/gov/hmcts/reform/em/orchestrator/domain/*',
        '**uk/gov/hmcts/reform/em/orchestrator/stitching/dto/*',
        '**uk/gov/hmcts/reform/em/orchestrator/info/*',
        '**uk/gov/hmcts/reform/em/orchestrator/service/dto/*',
        '**uk/gov/hmcts/reform/em/orchestrator/config/security/*',
        '**uk/gov/hmcts/reform/em/orchestrator/endpoint/*',
        '**uk/gov/hmcts/reform/em/orchestrator/service/ccdcallbackhandler/CcdCallbackResponseDto*',
]

jacocoTestReport {
    executionData(test)

    reports {
        xml.enabled = true
        csv.enabled = true
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.exclusions", coverageExclusionList.join(", ")
    }
}

configurations {
    contractTestCompile.extendsFrom testCompile
    contractTestRuntime.extendsFrom testRuntime
}


idea {
    module {
        testSourceDirs += project.sourceSets.aat.java.srcDirs
        testResourceDirs += project.sourceSets.aat.resources.srcDirs
        testSourceDirs += project.sourceSets.contractTest.java.srcDirs
        testResourceDirs += project.sourceSets.contractTest.resources.srcDirs
    }
}

task functional(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes functional tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/em/orchestrator/functional/**"

    testLogging {
        exceptionFormat = 'full'
    }
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

// Serenity Single page Reports
functional.finalizedBy(aggregate)

task smoke(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/em/orchestrator/smoke/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task validateYaml(type: JavaExec){
    description = "Validate the automated bundling YAML configuration"
    main = 'uk.gov.hmcts.reform.em.orchestrator.CliApplication'
    classpath = sourceSets.main.runtimeClasspath
    args '--validate'
}

compileJava.dependsOn processResources

task contract(type: Test) {
    group = 'Delivery pipeline'
    description = 'Runs the consumer Pact tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    include "uk/gov/hmcts/reform/em/orchestrator/**"
    systemProperty 'pact.rootDir', "pacts"
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task runAndPublishConsumerPactTests(type: Test){
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
}

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

serenity {
    reports = ["single-page-html"]
}

pact {
    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        tags = [System.getenv("PACT_BRANCH_NAME") ?: 'Dev']
        version = project.pactVersion
    }
}
